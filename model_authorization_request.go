/*
senhasegura DSM API Reference

This is a senhasegura new API design

API version: 2.0.22
Contact: egoncalves@senhasegura.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the AuthorizationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorizationRequest{}

// AuthorizationRequest This model describes all Authorization properties
type AuthorizationRequest struct {
	// System which this authorization belongs to
	System string `json:"system"`
	// Environment which this authorization belongs to
	Environment string `json:"environment"`
	// Expiration date of an authorization (must be in YYYY-MM-DD HH:MM format)
	Expiration *time.Time `json:"expiration,omitempty"`
	// Whether secret sensitive data will be encrypted on responses
	Encryption bool `json:"encryption"`
	// Permission level for reading and writing application data
	Permissions string `json:"permissions"`
	// List of IPs allowed to make requests using this authorization
	AllowedIps []string `json:"allowed_ips,omitempty"`
	// List of Referes allowed to make requests using this authorization
	AllowedReferers []string `json:"allowed_referers,omitempty"`
	// List of AWS ARNS allowed to request data through this authorization
	Arns []string `json:"arns,omitempty"`
	// Certificate fingerprint used to validate access on secrets
	Ceritificate *string `json:"ceritificate,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AuthorizationRequest AuthorizationRequest

// NewAuthorizationRequest instantiates a new AuthorizationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizationRequest(system string, environment string, encryption bool, permissions string) *AuthorizationRequest {
	this := AuthorizationRequest{}
	this.System = system
	this.Environment = environment
	this.Encryption = encryption
	this.Permissions = permissions
	return &this
}

// NewAuthorizationRequestWithDefaults instantiates a new AuthorizationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationRequestWithDefaults() *AuthorizationRequest {
	this := AuthorizationRequest{}
	return &this
}

// GetSystem returns the System field value
func (o *AuthorizationRequest) GetSystem() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.System
}

// GetSystemOk returns a tuple with the System field value
// and a boolean to check if the value has been set.
func (o *AuthorizationRequest) GetSystemOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.System, true
}

// SetSystem sets field value
func (o *AuthorizationRequest) SetSystem(v string) {
	o.System = v
}

// GetEnvironment returns the Environment field value
func (o *AuthorizationRequest) GetEnvironment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *AuthorizationRequest) GetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *AuthorizationRequest) SetEnvironment(v string) {
	o.Environment = v
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *AuthorizationRequest) GetExpiration() time.Time {
	if o == nil || isNil(o.Expiration) {
		var ret time.Time
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationRequest) GetExpirationOk() (*time.Time, bool) {
	if o == nil || isNil(o.Expiration) {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *AuthorizationRequest) HasExpiration() bool {
	if o != nil && !isNil(o.Expiration) {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given time.Time and assigns it to the Expiration field.
func (o *AuthorizationRequest) SetExpiration(v time.Time) {
	o.Expiration = &v
}

// GetEncryption returns the Encryption field value
func (o *AuthorizationRequest) GetEncryption() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Encryption
}

// GetEncryptionOk returns a tuple with the Encryption field value
// and a boolean to check if the value has been set.
func (o *AuthorizationRequest) GetEncryptionOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Encryption, true
}

// SetEncryption sets field value
func (o *AuthorizationRequest) SetEncryption(v bool) {
	o.Encryption = v
}

// GetPermissions returns the Permissions field value
func (o *AuthorizationRequest) GetPermissions() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *AuthorizationRequest) GetPermissionsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Permissions, true
}

// SetPermissions sets field value
func (o *AuthorizationRequest) SetPermissions(v string) {
	o.Permissions = v
}

// GetAllowedIps returns the AllowedIps field value if set, zero value otherwise.
func (o *AuthorizationRequest) GetAllowedIps() []string {
	if o == nil || isNil(o.AllowedIps) {
		var ret []string
		return ret
	}
	return o.AllowedIps
}

// GetAllowedIpsOk returns a tuple with the AllowedIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationRequest) GetAllowedIpsOk() ([]string, bool) {
	if o == nil || isNil(o.AllowedIps) {
		return nil, false
	}
	return o.AllowedIps, true
}

// HasAllowedIps returns a boolean if a field has been set.
func (o *AuthorizationRequest) HasAllowedIps() bool {
	if o != nil && !isNil(o.AllowedIps) {
		return true
	}

	return false
}

// SetAllowedIps gets a reference to the given []string and assigns it to the AllowedIps field.
func (o *AuthorizationRequest) SetAllowedIps(v []string) {
	o.AllowedIps = v
}

// GetAllowedReferers returns the AllowedReferers field value if set, zero value otherwise.
func (o *AuthorizationRequest) GetAllowedReferers() []string {
	if o == nil || isNil(o.AllowedReferers) {
		var ret []string
		return ret
	}
	return o.AllowedReferers
}

// GetAllowedReferersOk returns a tuple with the AllowedReferers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationRequest) GetAllowedReferersOk() ([]string, bool) {
	if o == nil || isNil(o.AllowedReferers) {
		return nil, false
	}
	return o.AllowedReferers, true
}

// HasAllowedReferers returns a boolean if a field has been set.
func (o *AuthorizationRequest) HasAllowedReferers() bool {
	if o != nil && !isNil(o.AllowedReferers) {
		return true
	}

	return false
}

// SetAllowedReferers gets a reference to the given []string and assigns it to the AllowedReferers field.
func (o *AuthorizationRequest) SetAllowedReferers(v []string) {
	o.AllowedReferers = v
}

// GetArns returns the Arns field value if set, zero value otherwise.
func (o *AuthorizationRequest) GetArns() []string {
	if o == nil || isNil(o.Arns) {
		var ret []string
		return ret
	}
	return o.Arns
}

// GetArnsOk returns a tuple with the Arns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationRequest) GetArnsOk() ([]string, bool) {
	if o == nil || isNil(o.Arns) {
		return nil, false
	}
	return o.Arns, true
}

// HasArns returns a boolean if a field has been set.
func (o *AuthorizationRequest) HasArns() bool {
	if o != nil && !isNil(o.Arns) {
		return true
	}

	return false
}

// SetArns gets a reference to the given []string and assigns it to the Arns field.
func (o *AuthorizationRequest) SetArns(v []string) {
	o.Arns = v
}

// GetCeritificate returns the Ceritificate field value if set, zero value otherwise.
func (o *AuthorizationRequest) GetCeritificate() string {
	if o == nil || isNil(o.Ceritificate) {
		var ret string
		return ret
	}
	return *o.Ceritificate
}

// GetCeritificateOk returns a tuple with the Ceritificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationRequest) GetCeritificateOk() (*string, bool) {
	if o == nil || isNil(o.Ceritificate) {
		return nil, false
	}
	return o.Ceritificate, true
}

// HasCeritificate returns a boolean if a field has been set.
func (o *AuthorizationRequest) HasCeritificate() bool {
	if o != nil && !isNil(o.Ceritificate) {
		return true
	}

	return false
}

// SetCeritificate gets a reference to the given string and assigns it to the Ceritificate field.
func (o *AuthorizationRequest) SetCeritificate(v string) {
	o.Ceritificate = &v
}

func (o AuthorizationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorizationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["system"] = o.System
	toSerialize["environment"] = o.Environment
	if !isNil(o.Expiration) {
		toSerialize["expiration"] = o.Expiration
	}
	toSerialize["encryption"] = o.Encryption
	toSerialize["permissions"] = o.Permissions
	if !isNil(o.AllowedIps) {
		toSerialize["allowed_ips"] = o.AllowedIps
	}
	if !isNil(o.AllowedReferers) {
		toSerialize["allowed_referers"] = o.AllowedReferers
	}
	if !isNil(o.Arns) {
		toSerialize["arns"] = o.Arns
	}
	if !isNil(o.Ceritificate) {
		toSerialize["ceritificate"] = o.Ceritificate
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AuthorizationRequest) UnmarshalJSON(bytes []byte) (err error) {
	varAuthorizationRequest := _AuthorizationRequest{}

	if err = json.Unmarshal(bytes, &varAuthorizationRequest); err == nil {
		*o = AuthorizationRequest(varAuthorizationRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "system")
		delete(additionalProperties, "environment")
		delete(additionalProperties, "expiration")
		delete(additionalProperties, "encryption")
		delete(additionalProperties, "permissions")
		delete(additionalProperties, "allowed_ips")
		delete(additionalProperties, "allowed_referers")
		delete(additionalProperties, "arns")
		delete(additionalProperties, "ceritificate")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAuthorizationRequest struct {
	value *AuthorizationRequest
	isSet bool
}

func (v NullableAuthorizationRequest) Get() *AuthorizationRequest {
	return v.value
}

func (v *NullableAuthorizationRequest) Set(val *AuthorizationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizationRequest(val *AuthorizationRequest) *NullableAuthorizationRequest {
	return &NullableAuthorizationRequest{value: val, isSet: true}
}

func (v NullableAuthorizationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


