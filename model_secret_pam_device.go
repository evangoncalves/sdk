/*
senhasegura DSM API Reference

This is a senhasegura new API design

API version: 2.0.22
Contact: egoncalves@senhasegura.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the SecretPAMDevice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretPAMDevice{}

// SecretPAMDevice This model describes all PAM Device properties
type SecretPAMDevice struct {
	Id int32 `json:"id"`
	Hostname string `json:"hostname"`
	Ip string `json:"ip"`
	Type string `json:"type"`
	Vendor string `json:"vendor"`
	Product string `json:"product"`
	Tenant *string `json:"tenant,omitempty"`
	Site *string `json:"site,omitempty"`
	Tags []string `json:"tags,omitempty"`
	Domains []string `json:"domains,omitempty"`
	Connectivities []SecretPAMDeviceConnectivitiesInner `json:"connectivities,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SecretPAMDevice SecretPAMDevice

// NewSecretPAMDevice instantiates a new SecretPAMDevice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretPAMDevice(id int32, hostname string, ip string, type_ string, vendor string, product string) *SecretPAMDevice {
	this := SecretPAMDevice{}
	this.Id = id
	this.Hostname = hostname
	this.Ip = ip
	this.Type = type_
	this.Vendor = vendor
	this.Product = product
	return &this
}

// NewSecretPAMDeviceWithDefaults instantiates a new SecretPAMDevice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretPAMDeviceWithDefaults() *SecretPAMDevice {
	this := SecretPAMDevice{}
	return &this
}

// GetId returns the Id field value
func (o *SecretPAMDevice) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SecretPAMDevice) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SecretPAMDevice) SetId(v int32) {
	o.Id = v
}

// GetHostname returns the Hostname field value
func (o *SecretPAMDevice) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *SecretPAMDevice) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *SecretPAMDevice) SetHostname(v string) {
	o.Hostname = v
}

// GetIp returns the Ip field value
func (o *SecretPAMDevice) GetIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ip
}

// GetIpOk returns a tuple with the Ip field value
// and a boolean to check if the value has been set.
func (o *SecretPAMDevice) GetIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ip, true
}

// SetIp sets field value
func (o *SecretPAMDevice) SetIp(v string) {
	o.Ip = v
}

// GetType returns the Type field value
func (o *SecretPAMDevice) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SecretPAMDevice) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SecretPAMDevice) SetType(v string) {
	o.Type = v
}

// GetVendor returns the Vendor field value
func (o *SecretPAMDevice) GetVendor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value
// and a boolean to check if the value has been set.
func (o *SecretPAMDevice) GetVendorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Vendor, true
}

// SetVendor sets field value
func (o *SecretPAMDevice) SetVendor(v string) {
	o.Vendor = v
}

// GetProduct returns the Product field value
func (o *SecretPAMDevice) GetProduct() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Product
}

// GetProductOk returns a tuple with the Product field value
// and a boolean to check if the value has been set.
func (o *SecretPAMDevice) GetProductOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Product, true
}

// SetProduct sets field value
func (o *SecretPAMDevice) SetProduct(v string) {
	o.Product = v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *SecretPAMDevice) GetTenant() string {
	if o == nil || isNil(o.Tenant) {
		var ret string
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretPAMDevice) GetTenantOk() (*string, bool) {
	if o == nil || isNil(o.Tenant) {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *SecretPAMDevice) HasTenant() bool {
	if o != nil && !isNil(o.Tenant) {
		return true
	}

	return false
}

// SetTenant gets a reference to the given string and assigns it to the Tenant field.
func (o *SecretPAMDevice) SetTenant(v string) {
	o.Tenant = &v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *SecretPAMDevice) GetSite() string {
	if o == nil || isNil(o.Site) {
		var ret string
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretPAMDevice) GetSiteOk() (*string, bool) {
	if o == nil || isNil(o.Site) {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *SecretPAMDevice) HasSite() bool {
	if o != nil && !isNil(o.Site) {
		return true
	}

	return false
}

// SetSite gets a reference to the given string and assigns it to the Site field.
func (o *SecretPAMDevice) SetSite(v string) {
	o.Site = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *SecretPAMDevice) GetTags() []string {
	if o == nil || isNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretPAMDevice) GetTagsOk() ([]string, bool) {
	if o == nil || isNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *SecretPAMDevice) HasTags() bool {
	if o != nil && !isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *SecretPAMDevice) SetTags(v []string) {
	o.Tags = v
}

// GetDomains returns the Domains field value if set, zero value otherwise.
func (o *SecretPAMDevice) GetDomains() []string {
	if o == nil || isNil(o.Domains) {
		var ret []string
		return ret
	}
	return o.Domains
}

// GetDomainsOk returns a tuple with the Domains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretPAMDevice) GetDomainsOk() ([]string, bool) {
	if o == nil || isNil(o.Domains) {
		return nil, false
	}
	return o.Domains, true
}

// HasDomains returns a boolean if a field has been set.
func (o *SecretPAMDevice) HasDomains() bool {
	if o != nil && !isNil(o.Domains) {
		return true
	}

	return false
}

// SetDomains gets a reference to the given []string and assigns it to the Domains field.
func (o *SecretPAMDevice) SetDomains(v []string) {
	o.Domains = v
}

// GetConnectivities returns the Connectivities field value if set, zero value otherwise.
func (o *SecretPAMDevice) GetConnectivities() []SecretPAMDeviceConnectivitiesInner {
	if o == nil || isNil(o.Connectivities) {
		var ret []SecretPAMDeviceConnectivitiesInner
		return ret
	}
	return o.Connectivities
}

// GetConnectivitiesOk returns a tuple with the Connectivities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretPAMDevice) GetConnectivitiesOk() ([]SecretPAMDeviceConnectivitiesInner, bool) {
	if o == nil || isNil(o.Connectivities) {
		return nil, false
	}
	return o.Connectivities, true
}

// HasConnectivities returns a boolean if a field has been set.
func (o *SecretPAMDevice) HasConnectivities() bool {
	if o != nil && !isNil(o.Connectivities) {
		return true
	}

	return false
}

// SetConnectivities gets a reference to the given []SecretPAMDeviceConnectivitiesInner and assigns it to the Connectivities field.
func (o *SecretPAMDevice) SetConnectivities(v []SecretPAMDeviceConnectivitiesInner) {
	o.Connectivities = v
}

func (o SecretPAMDevice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretPAMDevice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["hostname"] = o.Hostname
	toSerialize["ip"] = o.Ip
	toSerialize["type"] = o.Type
	toSerialize["vendor"] = o.Vendor
	toSerialize["product"] = o.Product
	if !isNil(o.Tenant) {
		toSerialize["tenant"] = o.Tenant
	}
	if !isNil(o.Site) {
		toSerialize["site"] = o.Site
	}
	if !isNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !isNil(o.Domains) {
		toSerialize["domains"] = o.Domains
	}
	if !isNil(o.Connectivities) {
		toSerialize["connectivities"] = o.Connectivities
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SecretPAMDevice) UnmarshalJSON(bytes []byte) (err error) {
	varSecretPAMDevice := _SecretPAMDevice{}

	if err = json.Unmarshal(bytes, &varSecretPAMDevice); err == nil {
		*o = SecretPAMDevice(varSecretPAMDevice)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "hostname")
		delete(additionalProperties, "ip")
		delete(additionalProperties, "type")
		delete(additionalProperties, "vendor")
		delete(additionalProperties, "product")
		delete(additionalProperties, "tenant")
		delete(additionalProperties, "site")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "domains")
		delete(additionalProperties, "connectivities")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSecretPAMDevice struct {
	value *SecretPAMDevice
	isSet bool
}

func (v NullableSecretPAMDevice) Get() *SecretPAMDevice {
	return v.value
}

func (v *NullableSecretPAMDevice) Set(val *SecretPAMDevice) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretPAMDevice) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretPAMDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretPAMDevice(val *SecretPAMDevice) *NullableSecretPAMDevice {
	return &NullableSecretPAMDevice{value: val, isSet: true}
}

func (v NullableSecretPAMDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretPAMDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


