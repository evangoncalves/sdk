/*
senhasegura DSM API Reference

This is a senhasegura new API design

API version: 2.0.22
Contact: egoncalves@senhasegura.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ApplicationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationRequest{}

// ApplicationRequest This model describes all application properties
type ApplicationRequest struct {
	// Name of the application
	Name string `json:"name"`
	// A descriptive text for the application
	Description *string `json:"description,omitempty"`
	// Authentication method used by this application's authorizations
	AuthMethod string `json:"auth_method"`
	// Line of business that best describe this application usage
	LineOfBusiness *string `json:"line_of_business,omitempty"`
	// Type of application
	Type *string `json:"type,omitempty"`
	// List of tags used for access segregation
	Tags []string `json:"tags,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApplicationRequest ApplicationRequest

// NewApplicationRequest instantiates a new ApplicationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationRequest(name string, authMethod string) *ApplicationRequest {
	this := ApplicationRequest{}
	this.Name = name
	this.AuthMethod = authMethod
	return &this
}

// NewApplicationRequestWithDefaults instantiates a new ApplicationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationRequestWithDefaults() *ApplicationRequest {
	this := ApplicationRequest{}
	return &this
}

// GetName returns the Name field value
func (o *ApplicationRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApplicationRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApplicationRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ApplicationRequest) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ApplicationRequest) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ApplicationRequest) SetDescription(v string) {
	o.Description = &v
}

// GetAuthMethod returns the AuthMethod field value
func (o *ApplicationRequest) GetAuthMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthMethod
}

// GetAuthMethodOk returns a tuple with the AuthMethod field value
// and a boolean to check if the value has been set.
func (o *ApplicationRequest) GetAuthMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthMethod, true
}

// SetAuthMethod sets field value
func (o *ApplicationRequest) SetAuthMethod(v string) {
	o.AuthMethod = v
}

// GetLineOfBusiness returns the LineOfBusiness field value if set, zero value otherwise.
func (o *ApplicationRequest) GetLineOfBusiness() string {
	if o == nil || isNil(o.LineOfBusiness) {
		var ret string
		return ret
	}
	return *o.LineOfBusiness
}

// GetLineOfBusinessOk returns a tuple with the LineOfBusiness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationRequest) GetLineOfBusinessOk() (*string, bool) {
	if o == nil || isNil(o.LineOfBusiness) {
		return nil, false
	}
	return o.LineOfBusiness, true
}

// HasLineOfBusiness returns a boolean if a field has been set.
func (o *ApplicationRequest) HasLineOfBusiness() bool {
	if o != nil && !isNil(o.LineOfBusiness) {
		return true
	}

	return false
}

// SetLineOfBusiness gets a reference to the given string and assigns it to the LineOfBusiness field.
func (o *ApplicationRequest) SetLineOfBusiness(v string) {
	o.LineOfBusiness = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ApplicationRequest) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationRequest) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ApplicationRequest) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ApplicationRequest) SetType(v string) {
	o.Type = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ApplicationRequest) GetTags() []string {
	if o == nil || isNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationRequest) GetTagsOk() ([]string, bool) {
	if o == nil || isNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ApplicationRequest) HasTags() bool {
	if o != nil && !isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ApplicationRequest) SetTags(v []string) {
	o.Tags = v
}

func (o ApplicationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["auth_method"] = o.AuthMethod
	if !isNil(o.LineOfBusiness) {
		toSerialize["line_of_business"] = o.LineOfBusiness
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApplicationRequest) UnmarshalJSON(bytes []byte) (err error) {
	varApplicationRequest := _ApplicationRequest{}

	if err = json.Unmarshal(bytes, &varApplicationRequest); err == nil {
		*o = ApplicationRequest(varApplicationRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "auth_method")
		delete(additionalProperties, "line_of_business")
		delete(additionalProperties, "type")
		delete(additionalProperties, "tags")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApplicationRequest struct {
	value *ApplicationRequest
	isSet bool
}

func (v NullableApplicationRequest) Get() *ApplicationRequest {
	return v.value
}

func (v *NullableApplicationRequest) Set(val *ApplicationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationRequest(val *ApplicationRequest) *NullableApplicationRequest {
	return &NullableApplicationRequest{value: val, isSet: true}
}

func (v NullableApplicationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


