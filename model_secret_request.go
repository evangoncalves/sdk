/*
senhasegura DSM API Reference

This is a senhasegura new API design

API version: 2.0.22
Contact: egoncalves@senhasegura.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
)

// checks if the SecretRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretRequest{}

// SecretRequest This model describes all Secret properties
type SecretRequest struct {
	// Secret name
	Name string `json:"name"`
	// Secret identifier (must be unique on the platform)
	Identifier string `json:"identifier"`
	// Engine where this secret will be used
	Engine string `json:"engine"`
	Environment string `json:"environment"`
	// Secret expiration date in UTC pattern
	Expiration *time.Time `json:"expiration,omitempty"`
	// A description about the usage of this Secret
	Description *string `json:"description,omitempty"`
	// Secret tags used for access segregation
	Tags []string `json:"tags,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SecretRequest SecretRequest

// NewSecretRequest instantiates a new SecretRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretRequest(name string, identifier string, engine string, environment string) *SecretRequest {
	this := SecretRequest{}
	this.Name = name
	this.Identifier = identifier
	this.Engine = engine
	this.Environment = environment
	return &this
}

// NewSecretRequestWithDefaults instantiates a new SecretRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretRequestWithDefaults() *SecretRequest {
	this := SecretRequest{}
	return &this
}

// GetName returns the Name field value
func (o *SecretRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SecretRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SecretRequest) SetName(v string) {
	o.Name = v
}

// GetIdentifier returns the Identifier field value
func (o *SecretRequest) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *SecretRequest) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *SecretRequest) SetIdentifier(v string) {
	o.Identifier = v
}

// GetEngine returns the Engine field value
func (o *SecretRequest) GetEngine() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Engine
}

// GetEngineOk returns a tuple with the Engine field value
// and a boolean to check if the value has been set.
func (o *SecretRequest) GetEngineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Engine, true
}

// SetEngine sets field value
func (o *SecretRequest) SetEngine(v string) {
	o.Engine = v
}

// GetEnvironment returns the Environment field value
func (o *SecretRequest) GetEnvironment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *SecretRequest) GetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *SecretRequest) SetEnvironment(v string) {
	o.Environment = v
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *SecretRequest) GetExpiration() time.Time {
	if o == nil || isNil(o.Expiration) {
		var ret time.Time
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretRequest) GetExpirationOk() (*time.Time, bool) {
	if o == nil || isNil(o.Expiration) {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *SecretRequest) HasExpiration() bool {
	if o != nil && !isNil(o.Expiration) {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given time.Time and assigns it to the Expiration field.
func (o *SecretRequest) SetExpiration(v time.Time) {
	o.Expiration = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SecretRequest) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SecretRequest) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SecretRequest) SetDescription(v string) {
	o.Description = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *SecretRequest) GetTags() []string {
	if o == nil || isNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretRequest) GetTagsOk() ([]string, bool) {
	if o == nil || isNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *SecretRequest) HasTags() bool {
	if o != nil && !isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *SecretRequest) SetTags(v []string) {
	o.Tags = v
}

func (o SecretRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["identifier"] = o.Identifier
	toSerialize["engine"] = o.Engine
	toSerialize["environment"] = o.Environment
	if !isNil(o.Expiration) {
		toSerialize["expiration"] = o.Expiration
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SecretRequest) UnmarshalJSON(bytes []byte) (err error) {
	varSecretRequest := _SecretRequest{}

	if err = json.Unmarshal(bytes, &varSecretRequest); err == nil {
		*o = SecretRequest(varSecretRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "identifier")
		delete(additionalProperties, "engine")
		delete(additionalProperties, "environment")
		delete(additionalProperties, "expiration")
		delete(additionalProperties, "description")
		delete(additionalProperties, "tags")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSecretRequest struct {
	value *SecretRequest
	isSet bool
}

func (v NullableSecretRequest) Get() *SecretRequest {
	return v.value
}

func (v *NullableSecretRequest) Set(val *SecretRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretRequest(val *SecretRequest) *NullableSecretRequest {
	return &NullableSecretRequest{value: val, isSet: true}
}

func (v NullableSecretRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


